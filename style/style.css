@font-face {
  font-family: "Delta";
  src: url(/fonts/Delta.ttf);
}

.board {
  margin: auto;
  width: 30%;
  height: 30vw;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  gap: 5px;
  background-color: black;
}
body {
  background-color: #f3f4f8;
  font-family: Arial, Helvetica, sans-serif;
}
h1 {
  text-align: center;
  font-size: 50px;
  text-transform: uppercase;
  font-family: Delta;
  margin: 0;
  letter-spacing: 15px;
}
.board > button {
  font-size: 50px;
  font-family: Delta;
  border: none;
  background-color: #f3f4f8;
}
.turn {
  text-align: center;
  font-size: 1.5em;
  margin-top: 15px;
  margin-bottom: 15px;
}

/* ANIMATING DIALOG */

/*   Open state of the dialog  */
dialog[open] {
  opacity: 1;
  transform: scaleY(1);
}

/*   Closed state of the dialog   */
dialog {
  opacity: 0;
  transform: scaleY(0);
  transition: opacity 0.7s ease-out, transform 0.7s ease-out,
    overlay 0.7s ease-out allow-discrete, display 0.7s ease-out allow-discrete;
  /* Equivalent to
  transition: all 0.7s allow-discrete; */
}

/*   Before-open state  */
/* Needs to be after the previous dialog[open] rule to take effect,
    as the specificity is the same */
@starting-style {
  dialog[open] {
    opacity: 0;
    transform: scaleY(0);
  }
}

/* Transition the :backdrop when the dialog modal is promoted to the top layer */
dialog::backdrop {
  background-color: rgb(0 0 0 / 0%);
  transition: display 0.7s allow-discrete, overlay 0.7s allow-discrete,
    background-color 0.7s;
  /* Equivalent to
  transition: all 0.7s allow-discrete; */
}

dialog[open]::backdrop {
  background-color: rgb(0 0 0 / 25%);
}

/* This starting-style rule cannot be nested inside the above selector
because the nesting selector cannot represent pseudo-elements. */

@starting-style {
  dialog[open]::backdrop {
    background-color: rgb(0 0 0 / 0%);
  }
}
